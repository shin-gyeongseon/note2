Ray 리소스별 배포 상태 확인 정리 (KubeRay 1.3+)

✅ RayCluster

정상 (OK)

status.conditions:

HeadPodReady=True

RayClusterProvisioned=True


(보조) status.state == "ready" → 비권장


비정상 (NOK)

ReplicaFailure=True

HeadPodReady=False가 지속됨

RayClusterSuspending=True → 중단 중
RayClusterSuspended=True → 중지됨


확인 명령

kubectl get raycluster <name> -o jsonpath='{.status.conditions}'
kubectl describe raycluster <name>   # Events 섹션 확인



---

✅ RayService (Serve 앱)

정상 (OK)

status.conditions → RayServiceReady=True

status.activeServiceStatus.rayClusterStatus 정상

status.numServeEndpoints > 0


비정상 (NOK)

RayServiceReady=False/Unknown

pendingServiceStatus가 오래 유지됨

워커 프로브 실패 (/-/healthz)


확인 명령

kubectl get rayservice <name> -o jsonpath='{.status.conditions}'
kubectl get rayservice               # 컬럼: service status, num serve endpoints



---

✅ RayJob

정상 (OK)

status.jobDeploymentStatus == "Complete"

status.jobStatus == "SUCCEEDED"


비정상 (NOK)

jobDeploymentStatus == "Failed"

jobStatus == "FAILED"

(둘 다 확인 필수, 불일치 이슈 사례 존재)


확인 명령

kubectl get rayjob <name> -o jsonpath='{.status.jobDeploymentStatus}{" "}{.status.jobStatus}{" "}{.status.reason}{" "}{.status.message}'



---

공통 체크리스트

1) Conditions 요약 보기

# Cluster
kubectl get raycluster <name> -o jsonpath='{range .status.conditions[*]}{.type}={.status} ({.reason})\n{end}'

# Service
kubectl get rayservice <name> -o jsonpath='{range .status.conditions[*]}{.type}={.status} ({.reason})\n{end}'

# Job
kubectl get rayjob <name> -o jsonpath='{range .status.conditions[*]}{.type}={.status} ({.reason})\n{end}'

2) OK 판정 기대값

# RayCluster → HeadPodReady=True, RayClusterProvisioned=True
# RayService → RayServiceReady=True + numServeEndpoints > 0
# RayJob     → "Complete SUCCEEDED"

3) 이벤트 확인 (원인 파악)

kubectl describe raycluster/<name> | sed -n '/Events:/,$p'
kubectl describe rayservice/<name> | sed -n '/Events:/,$p'
kubectl describe rayjob/<name>     | sed -n '/Events:/,$p'


---

📌 요약 원칙

Conditions를 1차 기준으로 삼는다.

레거시 필드(state, serviceStatus)는 참고용만.

애매하면 CR status → 이벤트 → 파드 로그/대시보드 순으로 진단한다. '''


